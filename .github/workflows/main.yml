# This is a basic workflow to help you get started with Actions

name: CI

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.2.2
    
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          path-type: minimal
          update: true
          install: >-
            mingw-w64-x86_64-qt5-static
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-make
            mingw-w64-x86_64-openssl
            make
            zip
      - shell: msys2 {0}
        run: |
          export PATH="/mingw64/bin:$PATH"
          export PATH="/mingw64/qt5-static/bin:$PATH"
          
          cd src
          mkdir build
          cd build
          qmake ..
          make
          make clean
          zip -j dsda-launcher-dev-win64.zip release/dsda-launcher.exe
          
      - uses: actions/upload-artifact@v4
        with:
          name: dsda-launcher-dev-win64.zip
          path: src\build\dsda-launcher-dev-win64.zip
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v3.3.0
        with:
          aqtversion: '==3.1.*'
          version: '6.6.0'
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          tools: 'tools_opensslv3_src'
      - name: build
        run: |
          sudo apt install libfuse2
          cd src
          mkdir build
          cd build
          qmake ..
          make

          # make clean
          # wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
          # chmod a+x linuxdeployqt-continuous-x86_64.AppImage
          # ./linuxdeployqt-continuous-x86_64.AppImage ./dsda-launcher -unsupported-allow-new-glibc
      - uses: actions/upload-artifact@v4
        with:
          name: linux
          path: src/build
          
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4.2.2
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v3.3.0
        with:
          aqtversion: '==3.1.*'
          version: '6.2.0'
          host: 'mac'
          target: 'desktop'
          arch: 'clang_64'
          
      - name: build
        run: |
          cd src
          mkdir build
          cd build
          qmake .. "macdeploy"
          make
          make clean
          ls
          macdeployqt ./dsda-launcher.app

          brew install create-dmg
          create-dmg--app-drop-link 10 10 ./dsda-launcher-dev-mac.dmg ./dsda-launcher.app
          
      - uses: actions/upload-artifact@v4
        with:
          name: dsda-launcher-dev-mac.dmg
          path: src/build/dsda-launcher-dev-mac.dmg
    


